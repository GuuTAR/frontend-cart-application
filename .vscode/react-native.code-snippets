{
    "Create React Native Component": {
        "prefix": "fcu",
        "body": [
            "import { View } from \"react-native\"",
            "import React from \"react\"",
            "",
            "const ${Component} = () => {",
            "    return (",
            "        <View>",
            "            ${0}",
            "        </View>",
            "    )",
            "}",
            "",
            "export default ${Component}"
        ],
        "description": "Create React Native Component"
    },
    "Init sheet file for contain all styles": {
        "prefix": "sheet",
        "body": [
            "import { StyleSheet } from \"react-native\";",
            "",
            "export const stylesheet = StyleSheet.create({",
            "    ${0}",
            "})"
        ],
        "description": "Init sheet file for contain all styles"
    },
    "Add new style": {
        "prefix": "style",
        "body": [
            "export const ${stylename} = [stylesheet.${stylename}]"
        ],
        "description": "Add new style"
    },
    "Import stylesheet ": {
        "prefix": "imp-sh",
        "body": [
            "import { stylesheet } from './sheet'"
        ],
        "description": "Import stylesheet "
    },
    "Create Handle Function": {
        "prefix": "handle",
        "body": [
            "const handle${function} = () => {",
            "    ${0}",
            "}",
            ""
        ],
        "description": "Create Handle Function"
    },
    "Create Mobx store": {
        "prefix": "store",
        "body": [
            "import { makeAutoObservable } from \"mobx\"",
            "",
            "export default class ${feature}Store {",
            "    rootStore",
            "    ",
            "    constructor(rootStore) {",
            "        makeAutoObservable(this)",
            "        this.rootStore = rootStore",
            "    }",
            "}"
        ],
        "description": "Create Mobx store"
    },
    "run in action mobx": {
        "prefix": "action",
        "body": [
            "runInAction(() => {",
            "    ${0}",
            "})"
        ],
        "description": "run in action mobx"
    },
    "List render mapping": {
        "prefix": "render",
        "body": [
          "const render${Component} = (${Item}, idx) => {",
          "    ${0}",
          "}"
        ],
        "description": "List render mapping"
      }
}